{"google":"","tagline":"manage lists of things in the command line","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"# lst - manage lists in files\r\n\r\nI keep lot of lists, usually I edit them with vim, this will end... today.\r\n\r\nlst is a small program that provides functionality to manipulate lists of\r\nthings.\r\n\r\n## general help\r\n\r\n\r\n        usage: lst [-h] {add,remove,purge,slice,head,tail,filter,export} ...\r\n\r\n        positional arguments:\r\n          {add,remove,purge,slice,head,tail,filter,export}\r\n            add                 add an element to a list\r\n            remove              remove element from list\r\n            purge               purge removed items from the file\r\n            slice               show a slice of the list\r\n            head                show the first N elements of the list\r\n            tail                show the last N elements of the list\r\n            filter              show elements that match the filter\r\n\r\n        optional arguments:\r\n          -h, --help            show this help message and exit\r\n\r\n## add command\r\n\r\n\r\n        usage: lst add [-h] [-a | -i INDEX] [-t TAG [TAG ...]] LIST MSG [MSG ...]\r\n\r\n        positional arguments:\r\n          LIST\r\n          MSG\r\n\r\n        optional arguments:\r\n          -h, --help            show this help message and exit\r\n          -t TAG [TAG ...], --tags TAG [TAG ...]\r\n                                tag message with specified tag\r\n\r\n### examples\r\n\r\n        # add item with tags\r\n\r\n        $  ~  lst add todos do something interesting -t tag1 tag2 tag3\r\n        * Tue Jul 10 17:55:46 2012 do something interesting # tag1 tag2 tag3\r\n\r\n        # add item without tags\r\n\r\n        $  ~  lst add todos do something else\r\n        * Tue Jul 10 17:55:55 2012 do something else\r\n\r\n\r\n## remove command\r\n\r\n        usage: lst remove [-h] [-a | -i INDEX [INDEX ...]] [-f] LIST\r\n\r\n        positional arguments:\r\n          LIST\r\n\r\n        optional arguments:\r\n          -h, --help            show this help message and exit\r\n          -a, --all             remove all elements from list\r\n          -i INDEX [INDEX ...], --index INDEX [INDEX ...]\r\n                                remove elements at index\r\n          -f, --force           don't ask for confirmation\r\n\r\n### examples\r\n\r\n        # example items from a list\r\n\r\n        0 * Tue Jul 10 17:55:46 2012 do something interesting # tag1 tag2 tag3\r\n        1 * Tue Jul 10 17:55:55 2012 do something else\r\n        2 * Tue Jul 10 17:59:20 2012 conquer the world\r\n        3 * Tue Jul 10 17:59:28 2012 do this demo # recursive\r\n\r\n        # remove the item at index 1\r\n\r\n        $  ~  lst remove todos -i 1\r\n\r\n        # result\r\n\r\n        0 * Tue Jul 10 17:55:46 2012 do something interesting # tag1 tag2 tag3\r\n        1 x Tue Jul 10 17:55:55 2012 do something else\r\n        2 * Tue Jul 10 17:59:20 2012 conquer the world\r\n        3 * Tue Jul 10 17:59:28 2012 do this demo # recursive\r\n\r\n        # remove items at index 0 and 3\r\n        $  ~  lst remove todos -i 0 3\r\n\r\n        # result\r\n\r\n        0 x Tue Jul 10 17:55:46 2012 do something interesting # tag1 tag2 tag3\r\n        1 x Tue Jul 10 17:55:55 2012 do something else\r\n        2 * Tue Jul 10 17:59:20 2012 conquer the world\r\n        3 x Tue Jul 10 17:59:28 2012 do this demo # recursive\r\n\r\n\r\n## purge command\r\n\r\n        usage: lst purge [-h] [-f] LIST\r\n\r\n        positional arguments:\r\n          LIST\r\n\r\n        optional arguments:\r\n          -h, --help   show this help message and exit\r\n          -f, --force  don't ask for confirmation\r\n\r\n### examples\r\n\r\n        # example items from a list\r\n\r\n        0 x Tue Jul 10 17:55:46 2012 do something interesting # tag1 tag2 tag3\r\n        1 x Tue Jul 10 17:55:55 2012 do something else\r\n        2 * Tue Jul 10 17:59:20 2012 conquer the world\r\n        3 x Tue Jul 10 17:59:28 2012 do this demo # recursive\r\n\r\n        $  ~  lst purge todos\r\n        are you sure you want to purge the list? [yes/no] yes\r\n\r\n        # result (removed items are completely removed from the list)\r\n\r\n        0 * Tue Jul 10 17:59:20 2012 conquer the world\r\n\r\n## slice command\r\n\r\n        usage: lst slice [-h] [-a] [-i] LIST BEGIN END STEP\r\n\r\n        positional arguments:\r\n          LIST\r\n          BEGIN\r\n          END\r\n          STEP\r\n\r\n        optional arguments:\r\n          -h, --help        show this help message and exit\r\n          -a, --show-all    show removed elements too\r\n          -i, --show-index  show the absolute index of the item\r\n\r\n### examples\r\n\r\n        # slice from 0 to 2 with step 1\r\n\r\n        $  ~  lst slice todos 0 2 1\r\n        * Tue Jul 10 17:59:20 2012 conquer the world\r\n        * Tue Jul 10 18:02:16 2012 do thing 1\r\n\r\n        # same as before but displaying index\r\n\r\n        $  ~  lst slice todos 0 2 1 -i\r\n        0 * Tue Jul 10 17:59:20 2012 conquer the world\r\n        1 * Tue Jul 10 18:02:16 2012 do thing 1\r\n\r\n        # slice from 0 to 4 with step 2 showing index\r\n\r\n        $  ~  lst slice todos 0 4 2 -i\r\n        0 * Tue Jul 10 17:59:20 2012 conquer the world\r\n        2 * Tue Jul 10 18:02:16 2012 do thing 1\r\n\r\n        # slice from 0 to 4 with step 1 showing index\r\n\r\n        $  ~  lst slice todos 0 4 1 -i\r\n        0 * Tue Jul 10 17:59:20 2012 conquer the world\r\n        1 * Tue Jul 10 18:02:16 2012 do thing 1\r\n        3 * Tue Jul 10 18:02:28 2012 do thing 3 # tag task3\r\n\r\n        # slice from 0 to 4 with step 1 showing index and removed items\r\n\r\n        $  ~  lst slice todos 0 4 1 -i -a\r\n        0 * Tue Jul 10 17:59:20 2012 conquer the world\r\n        1 * Tue Jul 10 18:02:16 2012 do thing 1\r\n        2 x Tue Jul 10 18:02:19 2012 do thing 2 # tag\r\n        3 * Tue Jul 10 18:02:28 2012 do thing 3 # tag task3\r\n\r\n## head command\r\n\r\n        usage: lst head [-h] [-a] [-i] [-c COUNT] LIST\r\n\r\n        positional arguments:\r\n          LIST\r\n\r\n        optional arguments:\r\n          -h, --help            show this help message and exit\r\n          -a, --show-all        show removed elements too\r\n          -i, --show-index      show the absolute index of the item\r\n          -c COUNT, --count COUNT\r\n\r\n### examples\r\n\r\n        # list first items with default count (10)\r\n\r\n        $  ~  lst head todos \r\n        * Tue Jul 10 17:59:20 2012 conquer the world\r\n        * Tue Jul 10 18:02:16 2012 do thing 1\r\n        * Tue Jul 10 18:02:19 2012 do thing 2 # tag\r\n        * Tue Jul 10 18:02:28 2012 do thing 3 # tag task3\r\n        * Tue Jul 10 18:02:35 2012 do thing 4 # task task4\r\n        * Tue Jul 10 18:02:43 2012 do thing 5 # task\r\n\r\n        # list first two\r\n\r\n        $  ~  lst head todos -c 2\r\n        * Tue Jul 10 17:59:20 2012 conquer the world\r\n        * Tue Jul 10 18:02:16 2012 do thing 1\r\n\r\n        # list first 4 with index\r\n\r\n        $  ~  lst head todos -c 4 -i\r\n        0 * Tue Jul 10 17:59:20 2012 conquer the world\r\n        1 * Tue Jul 10 18:02:16 2012 do thing 1\r\n        2 * Tue Jul 10 18:02:19 2012 do thing 2 # tag\r\n        3 * Tue Jul 10 18:02:28 2012 do thing 3 # tag task3\r\n\r\n        # remove one\r\n\r\n        $  ~  lst remove todos -i 2\r\n\r\n        # list again (see that item at index 2 is missing)\r\n\r\n        $  ~  lst head todos -i     \r\n        0 * Tue Jul 10 17:59:20 2012 conquer the world\r\n        1 * Tue Jul 10 18:02:16 2012 do thing 1\r\n        3 * Tue Jul 10 18:02:28 2012 do thing 3 # tag task3\r\n        4 * Tue Jul 10 18:02:35 2012 do thing 4 # task task4\r\n        5 * Tue Jul 10 18:02:43 2012 do thing 5 # task\r\n\r\n        # list all (see that item at index 2 is marked as removed)\r\n\r\n        $  ~  lst head todos -i -a\r\n        0 * Tue Jul 10 17:59:20 2012 conquer the world\r\n        1 * Tue Jul 10 18:02:16 2012 do thing 1\r\n        2 x Tue Jul 10 18:02:19 2012 do thing 2 # tag\r\n        3 * Tue Jul 10 18:02:28 2012 do thing 3 # tag task3\r\n        4 * Tue Jul 10 18:02:35 2012 do thing 4 # task task4\r\n        5 * Tue Jul 10 18:02:43 2012 do thing 5 # task\r\n\r\n\r\n## tail command\r\n\r\n        usage: lst tail [-h] [-a] [-i] [-c COUNT] LIST\r\n\r\n        positional arguments:\r\n          LIST\r\n\r\n        optional arguments:\r\n          -h, --help            show this help message and exit\r\n          -a, --show-all        show removed elements too\r\n          -i, --show-index      show the absolute index of the item\r\n          -c COUNT, --count COUNT\r\n\r\n### examples\r\n\r\n        # list last items with default count (10)\r\n\r\n        $  ~  lst tail todos\r\n        * Tue Jul 10 17:59:20 2012 conquer the world\r\n        * Tue Jul 10 18:02:16 2012 do thing 1\r\n        * Tue Jul 10 18:02:28 2012 do thing 3 # tag task3\r\n        * Tue Jul 10 18:02:35 2012 do thing 4 # task task4\r\n        * Tue Jul 10 18:02:43 2012 do thing 5 # task\r\n\r\n        # list last two\r\n\r\n        $  ~  lst tail todos -c 2\r\n        * Tue Jul 10 18:02:35 2012 do thing 4 # task task4\r\n        * Tue Jul 10 18:02:43 2012 do thing 5 # task\r\n\r\n        # list last 4 with index\r\n\r\n        $  ~  lst tail todos -c 4 -i\r\n        1 * Tue Jul 10 18:02:16 2012 do thing 1\r\n        3 * Tue Jul 10 18:02:28 2012 do thing 3 # tag task3\r\n        4 * Tue Jul 10 18:02:35 2012 do thing 4 # task task4\r\n        5 * Tue Jul 10 18:02:43 2012 do thing 5 # task\r\n\r\n        # list all (see that item at index 2 is marked as removed)\r\n\r\n        $  ~  lst tail todos -c 4 -i -a\r\n        2 x Tue Jul 10 18:02:19 2012 do thing 2 # tag\r\n        3 * Tue Jul 10 18:02:28 2012 do thing 3 # tag task3\r\n        4 * Tue Jul 10 18:02:35 2012 do thing 4 # task task4\r\n        5 * Tue Jul 10 18:02:43 2012 do thing 5 # task\r\n\r\n\r\n## filter command\r\n\r\n        usage: lst filter [-h] [-a] [-i] [-t TAG [TAG ...] | -T TAG [TAG ...]]\r\n                          LIST [QUERY [QUERY ...]]\r\n\r\n        positional arguments:\r\n          LIST\r\n          QUERY\r\n\r\n        optional arguments:\r\n          -h, --help            show this help message and exit\r\n          -a, --show-all        show removed elements too\r\n          -i, --show-index      show the absolute index of the item\r\n          -t TAG [TAG ...], --tags TAG [TAG ...]\r\n                                show elements that have *any* of the tags\r\n          -T TAG [TAG ...], --all-tags TAG [TAG ...]\r\n                                show elements that have *all* of the tags\r\n\r\n### examples\r\n\r\n        # apply no filter\r\n\r\n        $  ~  lst filter todos\r\n        * Tue Jul 10 17:59:20 2012 conquer the world\r\n        * Tue Jul 10 18:02:16 2012 do thing 1\r\n        * Tue Jul 10 18:02:28 2012 do thing 3 # tag task3\r\n        * Tue Jul 10 18:02:35 2012 do thing 4 # task task4\r\n        * Tue Jul 10 18:02:43 2012 do thing 5 # task\r\n\r\n        # list items that contain the word \"thing\"\r\n\r\n        $  ~  lst filter todos thing\r\n        * Tue Jul 10 18:02:16 2012 do thing 1\r\n        * Tue Jul 10 18:02:28 2012 do thing 3 # tag task3\r\n        * Tue Jul 10 18:02:35 2012 do thing 4 # task task4\r\n        * Tue Jul 10 18:02:43 2012 do thing 5 # task\r\n\r\n        # list items that contain the word \"thing\" or the tag \"task\"\r\n\r\n        $  ~  lst filter todos thing -t task\r\n        * Tue Jul 10 18:02:16 2012 do thing 1\r\n        * Tue Jul 10 18:02:28 2012 do thing 3 # tag task3\r\n        * Tue Jul 10 18:02:35 2012 do thing 4 # task task4\r\n        * Tue Jul 10 18:02:35 2012 do thing 4 # task task4\r\n        * Tue Jul 10 18:02:43 2012 do thing 5 # task\r\n        * Tue Jul 10 18:02:43 2012 do thing 5 # task\r\n\r\n        # list items that contain the tag \"task\"\r\n\r\n        $  ~  lst filter todos -t task      \r\n        * Tue Jul 10 18:02:35 2012 do thing 4 # task task4\r\n        * Tue Jul 10 18:02:43 2012 do thing 5 # task\r\n\r\n        # list items that contain the tag \"task\" or \"tag\"\r\n\r\n        $  ~  lst filter todos -t task tag\r\n        * Tue Jul 10 18:02:28 2012 do thing 3 # tag task3\r\n        * Tue Jul 10 18:02:35 2012 do thing 4 # task task4\r\n        * Tue Jul 10 18:02:43 2012 do thing 5 # task\r\n\r\n        # list items that contain the tag \"task\" and \"tag\"\r\n\r\n        $  ~  lst filter todos -T task tag\r\n\r\n        # list items that contain the tag \"task\" and \"task4\"\r\n\r\n        $  ~  lst filter todos -T task task4\r\n        * Tue Jul 10 18:02:35 2012 do thing 4 # task task4\r\n\r\n        # list items that contain the tag \"task\" or \"task4\"\r\n\r\n        $  ~  lst filter todos -t task task4\r\n        * Tue Jul 10 18:02:35 2012 do thing 4 # task task4\r\n        * Tue Jul 10 18:02:43 2012 do thing 5 # task\r\n\r\n        # list items that contain the word \"world\"\r\n\r\n        $  ~  lst filter todos world        \r\n        * Tue Jul 10 17:59:20 2012 conquer the world\r\n\r\n\r\n## configuration\r\n\r\nby default the configuration is looked up in .config/lst\r\n\r\nthe file contains a JSON object with the configuration of the program with\r\nthe following subojects:\r\n\r\n### lists\r\n\r\nthe lists object contains as keys the names of the lists that you want to\r\nconfigure and as values the configuration for those lists, for example:\r\n\r\nif the path to a list doesn't exists it's created::\r\n\r\n        {\r\n            \"lists\": {\r\n                \"links\": {\r\n                    \"format\": \"src/me/links/%Y/%m.links\" // strftime format can be used\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n#### fields\r\n\r\nformat\r\n        is the path to the list, you can use *~* to refer to the user's home\r\n        and any format from datetime.strftime\r\n\r\n## details\r\n\r\n\r\n### license\r\n\r\nMIT + optional beer for the author\r\n\r\n### author\r\n\r\nmarianoguerra\r\n\r\n### tools\r\n\r\npython 3\r\n","name":"lst"}